// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  email     String    @unique
  password  String?
  googleId  String?
  name      String
  role      String    @default("user")
  bio       String
  avatarUrl String
  website   String
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  content       String
  published     Boolean   @default(false)
  publishedDate DateTime
  description   String
  authorId      String    @db.ObjectId
  author        User      @relation(fields: [authorId], references: [id])
  categories    String[]
  tags          String[]
  comments      Comment[] @relation("PostToComment")
  likes         Like[] // Use plural form for related models
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  postId    String   @db.ObjectId
  post      Post     @relation("PostToComment", fields: [postId], references: [id], onDelete: Cascade)
  authorId  String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
